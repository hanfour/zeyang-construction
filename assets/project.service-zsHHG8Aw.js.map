{"version":3,"file":"project.service-zsHHG8Aw.js","sources":["../../src/services/project.service.ts"],"sourcesContent":["import api from './api';\nimport { Project, ProjectFormData, ProjectFilters, PaginatedResponse, ApiResponse } from '@/types';\n\nclass ProjectService {\n  async getProjects(filters?: ProjectFilters): Promise<ApiResponse<PaginatedResponse<Project>>> {\n    const params = new URLSearchParams();\n    \n    if (filters) {\n      Object.entries(filters).forEach(([key, value]) => {\n        if (value !== undefined && value !== null && value !== '') {\n          params.append(key, String(value));\n        }\n      });\n    }\n    \n    return api.get<PaginatedResponse<Project>>(`/projects?${params.toString()}`);\n  }\n\n  async getProject(identifier: string): Promise<ApiResponse<{ project: Project }>> {\n    return api.get<{ project: Project }>(`/projects/${identifier}`);\n  }\n\n  async getProjectBySlug(slug: string): Promise<ApiResponse<{ project: Project }>> {\n    return api.get<{ project: Project }>(`/projects/slug/${slug}`);\n  }\n\n  async getFeaturedProjects(limit: number = 6): Promise<ApiResponse<{ items: Project[] }>> {\n    return api.get<{ items: Project[] }>(`/projects/featured?limit=${limit}`);\n  }\n\n  async searchProjects(query: string, page: number = 1, limit: number = 20): Promise<ApiResponse<PaginatedResponse<Project>>> {\n    return api.get<PaginatedResponse<Project>>(`/projects/search?q=${encodeURIComponent(query)}&page=${page}&limit=${limit}`);\n  }\n\n  async getRelatedProjects(slug: string, limit: number = 4): Promise<ApiResponse<{ items: Project[] }>> {\n    return api.get<{ items: Project[] }>(`/projects/${slug}/related?limit=${limit}`);\n  }\n\n  async createProject(data: ProjectFormData): Promise<ApiResponse<{ project: Project }>> {\n    return api.post<{ project: Project }>('/projects', data);\n  }\n\n  async updateProject(identifier: string, data: Partial<ProjectFormData>): Promise<ApiResponse<{ project: Project }>> {\n    return api.put<{ project: Project }>(`/projects/${identifier}`, data);\n  }\n\n  async updateProjectStatus(identifier: string, status: Project['status']): Promise<ApiResponse> {\n    return api.patch(`/projects/${identifier}/status`, { status });\n  }\n\n  async toggleProjectFeatured(identifier: string): Promise<ApiResponse<{ is_featured: boolean }>> {\n    return api.post<{ is_featured: boolean }>(`/projects/${identifier}/feature`);\n  }\n\n  async deleteProject(identifier: string, hardDelete: boolean = false): Promise<ApiResponse> {\n    return api.delete(`/projects/${identifier}${hardDelete ? '?hard=true' : ''}`);\n  }\n\n  async reorderProjects(orders: Array<{ uuid: string; display_order: number }>): Promise<ApiResponse> {\n    return api.put('/projects/reorder', { orders });\n  }\n\n  // Image management\n  async uploadImages(\n    projectIdentifier: string,\n    files: File[],\n    imageType: string = 'gallery',\n    altText?: string,\n    onProgress?: (progress: number) => void\n  ): Promise<ApiResponse> {\n    const formData = new FormData();\n    \n    files.forEach(file => {\n      formData.append('files', file);\n    });\n    \n    formData.append('image_type', imageType);\n    if (altText) {\n      formData.append('alt_text', altText);\n    }\n    \n    return api.upload(`/projects/${projectIdentifier}/images`, formData, onProgress);\n  }\n\n  async updateImage(projectIdentifier: string, imageId: number, data: any): Promise<ApiResponse> {\n    return api.put(`/projects/${projectIdentifier}/images/${imageId}`, data);\n  }\n\n  async deleteImage(projectIdentifier: string, imageId: number): Promise<ApiResponse> {\n    return api.delete(`/projects/${projectIdentifier}/images/${imageId}`);\n  }\n\n  async setMainImage(projectIdentifier: string, imageId: number): Promise<ApiResponse> {\n    return api.post(`/projects/${projectIdentifier}/images/${imageId}/set-main`);\n  }\n\n  async reorderImages(projectIdentifier: string, orders: Array<{ id: number; display_order: number }>): Promise<ApiResponse> {\n    return api.put(`/projects/${projectIdentifier}/images/reorder`, { orders });\n  }\n}\n\nexport default new ProjectService();"],"names":["ProjectService","filters","params","key","value","api","identifier","slug","limit","query","page","data","status","hardDelete","orders","projectIdentifier","files","imageType","altText","onProgress","formData","file","imageId","projectService"],"mappings":"wCAGA,MAAMA,CAAe,CACnB,MAAM,YAAYC,EAA4E,CAC5F,MAAMC,EAAS,IAAI,gBAEnB,OAAID,GACF,OAAO,QAAQA,CAAO,EAAE,QAAQ,CAAC,CAACE,EAAKC,CAAK,IAAM,CACrBA,GAAU,MAAQA,IAAU,IACrDF,EAAO,OAAOC,EAAK,OAAOC,CAAK,CAAC,CAEpC,CAAC,EAGIC,EAAI,IAAgC,aAAaH,EAAO,SAAA,CAAU,EAAE,CAC7E,CAEA,MAAM,WAAWI,EAAgE,CAC/E,OAAOD,EAAI,IAA0B,aAAaC,CAAU,EAAE,CAChE,CAEA,MAAM,iBAAiBC,EAA0D,CAC/E,OAAOF,EAAI,IAA0B,kBAAkBE,CAAI,EAAE,CAC/D,CAEA,MAAM,oBAAoBC,EAAgB,EAA+C,CACvF,OAAOH,EAAI,IAA0B,4BAA4BG,CAAK,EAAE,CAC1E,CAEA,MAAM,eAAeC,EAAeC,EAAe,EAAGF,EAAgB,GAAsD,CAC1H,OAAOH,EAAI,IAAgC,sBAAsB,mBAAmBI,CAAK,CAAC,SAASC,CAAI,UAAUF,CAAK,EAAE,CAC1H,CAEA,MAAM,mBAAmBD,EAAcC,EAAgB,EAA+C,CACpG,OAAOH,EAAI,IAA0B,aAAaE,CAAI,kBAAkBC,CAAK,EAAE,CACjF,CAEA,MAAM,cAAcG,EAAmE,CACrF,OAAON,EAAI,KAA2B,YAAaM,CAAI,CACzD,CAEA,MAAM,cAAcL,EAAoBK,EAA4E,CAClH,OAAON,EAAI,IAA0B,aAAaC,CAAU,GAAIK,CAAI,CACtE,CAEA,MAAM,oBAAoBL,EAAoBM,EAAiD,CAC7F,OAAOP,EAAI,MAAM,aAAaC,CAAU,UAAW,CAAE,OAAAM,EAAQ,CAC/D,CAEA,MAAM,sBAAsBN,EAAoE,CAC9F,OAAOD,EAAI,KAA+B,aAAaC,CAAU,UAAU,CAC7E,CAEA,MAAM,cAAcA,EAAoBO,EAAsB,GAA6B,CACzF,OAAOR,EAAI,OAAO,aAAaC,CAAU,GAAGO,EAAa,aAAe,EAAE,EAAE,CAC9E,CAEA,MAAM,gBAAgBC,EAA8E,CAClG,OAAOT,EAAI,IAAI,oBAAqB,CAAE,OAAAS,EAAQ,CAChD,CAGA,MAAM,aACJC,EACAC,EACAC,EAAoB,UACpBC,EACAC,EACsB,CACtB,MAAMC,EAAW,IAAI,SAErB,OAAAJ,EAAM,QAAQK,GAAQ,CACpBD,EAAS,OAAO,QAASC,CAAI,CAC/B,CAAC,EAEDD,EAAS,OAAO,aAAcH,CAAS,EACnCC,GACFE,EAAS,OAAO,WAAYF,CAAO,EAG9Bb,EAAI,OAAO,aAAaU,CAAiB,UAAWK,EAAUD,CAAU,CACjF,CAEA,MAAM,YAAYJ,EAA2BO,EAAiBX,EAAiC,CAC7F,OAAON,EAAI,IAAI,aAAaU,CAAiB,WAAWO,CAAO,GAAIX,CAAI,CACzE,CAEA,MAAM,YAAYI,EAA2BO,EAAuC,CAClF,OAAOjB,EAAI,OAAO,aAAaU,CAAiB,WAAWO,CAAO,EAAE,CACtE,CAEA,MAAM,aAAaP,EAA2BO,EAAuC,CACnF,OAAOjB,EAAI,KAAK,aAAaU,CAAiB,WAAWO,CAAO,WAAW,CAC7E,CAEA,MAAM,cAAcP,EAA2BD,EAA4E,CACzH,OAAOT,EAAI,IAAI,aAAaU,CAAiB,kBAAmB,CAAE,OAAAD,EAAQ,CAC5E,CACF,CAEA,MAAAS,EAAe,IAAIvB"}