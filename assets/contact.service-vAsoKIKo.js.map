{"version":3,"file":"contact.service-vAsoKIKo.js","sources":["../../src/services/contact.service.ts"],"sourcesContent":["import api from './api';\nimport axios from 'axios';\nimport { Contact, ContactFilters, PaginatedResponse, ApiResponse, ContactFormData } from '@/types';\n\nclass ContactService {\n  async getContacts(filters?: ContactFilters): Promise<ApiResponse<PaginatedResponse<Contact>>> {\n    const params = new URLSearchParams();\n    \n    if (filters) {\n      Object.entries(filters).forEach(([key, value]) => {\n        if (value !== undefined && value !== null && value !== '') {\n          // Convert frontend parameter names to backend expected names\n          const backendKey = key === 'is_read' ? 'isRead' : \n                            key === 'is_replied' ? 'isReplied' : key;\n          params.append(backendKey, String(value));\n        }\n      });\n    }\n    \n    return api.get<PaginatedResponse<Contact>>(`/contacts?${params.toString()}`);\n  }\n\n  async createContact(data: ContactFormData): Promise<ApiResponse<{ contact: Contact }>> {\n    return api.post<{ contact: Contact }>('/contacts', data);\n  }\n\n  async getContact(id: number): Promise<ApiResponse<{ contact: Contact }>> {\n    return api.get<{ contact: Contact }>(`/contacts/${id}`);\n  }\n\n  async markAsRead(id: number): Promise<ApiResponse> {\n    return api.put(`/contacts/${id}/read`);\n  }\n\n  async markAsReplied(id: number): Promise<ApiResponse> {\n    return api.put(`/contacts/${id}/mark-replied`);\n  }\n\n  async replyToContact(id: number, data: { message: string; notes?: string }): Promise<ApiResponse> {\n    return api.put(`/contacts/${id}/reply`, data);\n  }\n\n  async updateNotes(id: number, notes: string): Promise<ApiResponse> {\n    return api.put(`/contacts/${id}/notes`, { notes });\n  }\n\n  async deleteContact(id: number): Promise<ApiResponse> {\n    return api.delete(`/contacts/${id}`);\n  }\n\n  async bulkMarkAsRead(ids: number[]): Promise<ApiResponse> {\n    return api.put('/contacts/bulk-read', { ids });\n  }\n\n  async bulkDelete(ids: number[]): Promise<ApiResponse> {\n    return api.post('/contacts/bulk-delete', { ids });\n  }\n\n  async exportContacts(filters?: ContactFilters): Promise<Blob> {\n    const params = new URLSearchParams();\n    \n    if (filters) {\n      Object.entries(filters).forEach(([key, value]) => {\n        if (value !== undefined && value !== null && value !== '') {\n          // Convert frontend parameter names to backend expected names\n          const backendKey = key === 'is_read' ? 'isRead' : \n                            key === 'is_replied' ? 'isReplied' : key;\n          params.append(backendKey, String(value));\n        }\n      });\n    }\n\n    // Use axios directly for blob response to avoid JSON parsing issues\n    const response = await axios.get(`${api.baseURL || 'http://localhost:5001/api'}/contacts/export?${params.toString()}`, {\n      responseType: 'blob',\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('accessToken')}`,\n      },\n    });\n\n    return response.data;\n  }\n}\n\nexport default new ContactService();"],"names":["ContactService","filters","params","key","value","backendKey","api","data","id","notes","ids","axios","contactService"],"mappings":"+CAIA,MAAMA,CAAe,CACnB,MAAM,YAAYC,EAA4E,CAC5F,MAAMC,EAAS,IAAI,gBAEnB,OAAID,GACF,OAAO,QAAQA,CAAO,EAAE,QAAQ,CAAC,CAACE,EAAKC,CAAK,IAAM,CAChD,GAA2BA,GAAU,MAAQA,IAAU,GAAI,CAEzD,MAAMC,EAAaF,IAAQ,UAAY,SACrBA,IAAQ,aAAe,YAAcA,EACvDD,EAAO,OAAOG,EAAY,OAAOD,CAAK,CAAC,CACzC,CACF,CAAC,EAGIE,EAAI,IAAgC,aAAaJ,EAAO,SAAA,CAAU,EAAE,CAC7E,CAEA,MAAM,cAAcK,EAAmE,CACrF,OAAOD,EAAI,KAA2B,YAAaC,CAAI,CACzD,CAEA,MAAM,WAAWC,EAAwD,CACvE,OAAOF,EAAI,IAA0B,aAAaE,CAAE,EAAE,CACxD,CAEA,MAAM,WAAWA,EAAkC,CACjD,OAAOF,EAAI,IAAI,aAAaE,CAAE,OAAO,CACvC,CAEA,MAAM,cAAcA,EAAkC,CACpD,OAAOF,EAAI,IAAI,aAAaE,CAAE,eAAe,CAC/C,CAEA,MAAM,eAAeA,EAAYD,EAAiE,CAChG,OAAOD,EAAI,IAAI,aAAaE,CAAE,SAAUD,CAAI,CAC9C,CAEA,MAAM,YAAYC,EAAYC,EAAqC,CACjE,OAAOH,EAAI,IAAI,aAAaE,CAAE,SAAU,CAAE,MAAAC,EAAO,CACnD,CAEA,MAAM,cAAcD,EAAkC,CACpD,OAAOF,EAAI,OAAO,aAAaE,CAAE,EAAE,CACrC,CAEA,MAAM,eAAeE,EAAqC,CACxD,OAAOJ,EAAI,IAAI,sBAAuB,CAAE,IAAAI,EAAK,CAC/C,CAEA,MAAM,WAAWA,EAAqC,CACpD,OAAOJ,EAAI,KAAK,wBAAyB,CAAE,IAAAI,EAAK,CAClD,CAEA,MAAM,eAAeT,EAAyC,CAC5D,MAAMC,EAAS,IAAI,gBAEnB,OAAID,GACF,OAAO,QAAQA,CAAO,EAAE,QAAQ,CAAC,CAACE,EAAKC,CAAK,IAAM,CAChD,GAA2BA,GAAU,MAAQA,IAAU,GAAI,CAEzD,MAAMC,EAAaF,IAAQ,UAAY,SACrBA,IAAQ,aAAe,YAAcA,EACvDD,EAAO,OAAOG,EAAY,OAAOD,CAAK,CAAC,CACzC,CACF,CAAC,GAIc,MAAMO,EAAM,IAAI,GAAGL,EAAI,SAAW,2BAA2B,oBAAoBJ,EAAO,SAAA,CAAU,GAAI,CACrH,aAAc,OACd,QAAS,CACP,cAAiB,UAAU,aAAa,QAAQ,aAAa,CAAC,EAAA,CAChE,CACD,GAEe,IAClB,CACF,CAEA,MAAAU,EAAe,IAAIZ"}