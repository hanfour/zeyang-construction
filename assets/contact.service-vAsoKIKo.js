import{C as e,D as o}from"./index-By57yhN3.js";class i{async getContacts(t){const a=new URLSearchParams;return t&&Object.entries(t).forEach(([c,n])=>{if(n!=null&&n!==""){const s=c==="is_read"?"isRead":c==="is_replied"?"isReplied":c;a.append(s,String(n))}}),e.get(`/contacts?${a.toString()}`)}async createContact(t){return e.post("/contacts",t)}async getContact(t){return e.get(`/contacts/${t}`)}async markAsRead(t){return e.put(`/contacts/${t}/read`)}async markAsReplied(t){return e.put(`/contacts/${t}/mark-replied`)}async replyToContact(t,a){return e.put(`/contacts/${t}/reply`,a)}async updateNotes(t,a){return e.put(`/contacts/${t}/notes`,{notes:a})}async deleteContact(t){return e.delete(`/contacts/${t}`)}async bulkMarkAsRead(t){return e.put("/contacts/bulk-read",{ids:t})}async bulkDelete(t){return e.post("/contacts/bulk-delete",{ids:t})}async exportContacts(t){const a=new URLSearchParams;return t&&Object.entries(t).forEach(([n,s])=>{if(s!=null&&s!==""){const r=n==="is_read"?"isRead":n==="is_replied"?"isReplied":n;a.append(r,String(s))}}),(await o.get(`${e.baseURL||"http://localhost:5001/api"}/contacts/export?${a.toString()}`,{responseType:"blob",headers:{Authorization:`Bearer ${localStorage.getItem("accessToken")}`}})).data}}const l=new i;export{l as c};
//# sourceMappingURL=contact.service-vAsoKIKo.js.map
